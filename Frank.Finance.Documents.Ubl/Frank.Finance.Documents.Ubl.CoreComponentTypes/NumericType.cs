//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator
namespace Frank.Finance.Documents.Ubl.CoreComponentTypes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="en"><ccts:UniqueID xmlns:ccts="urn:un:unece:uncefact:documentation:2">UNDT000014</ccts:UniqueID></para>
    /// <para xml:lang="en"><ccts:CategoryCode xmlns:ccts="urn:un:unece:uncefact:documentation:2">CCT</ccts:CategoryCode></para>
    /// <para xml:lang="en"><ccts:DictionaryEntryName xmlns:ccts="urn:un:unece:uncefact:documentation:2">Numeric. Type</ccts:DictionaryEntryName></para>
    /// <para xml:lang="en"><ccts:VersionID xmlns:ccts="urn:un:unece:uncefact:documentation:2">1.0</ccts:VersionID></para>
    /// <para xml:lang="en"><ccts:Definition xmlns:ccts="urn:un:unece:uncefact:documentation:2">Numeric information that is assigned or is determined by calculation, counting, or
    ///                    sequencing. It does not require a unit of quantity or unit of measure.
    ///                </ccts:Definition></para>
    /// <para xml:lang="en"><ccts:RepresentationTermName xmlns:ccts="urn:un:unece:uncefact:documentation:2">Numeric</ccts:RepresentationTermName></para>
    /// <para xml:lang="en"><ccts:PrimitiveType xmlns:ccts="urn:un:unece:uncefact:documentation:2">string</ccts:PrimitiveType></para>
    /// </summary>
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "")]
    [XmlTypeAttribute("NumericType", Namespace="urn:un:unece:uncefact:data:specification:CoreComponentTypeSchemaModule:2")]
    [XmlRootAttribute("NumericType", Namespace="urn:un:unece:uncefact:data:specification:CoreComponentTypeSchemaModule:2")]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.AirFlowPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.AmountRateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.BudgetYearNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.CalculationRateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.CalculationSequenceNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.FrozenPeriodDaysNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.HumidityPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.LineCountNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.LineNumberNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MaximumCopiesNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MaximumNumberNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MaximumPaymentInstructionsNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MaximumPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MinimumNumberNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MinimumPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.MultiplierFactorNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.UnqualifiedDataTypesUnqualifiedDataTypes.NumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.OrderableUnitFactorRateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.OrderIntervalDaysNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.OrderQuantityIncrementNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.PackSizeNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.PartecipationPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.ParticipationPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.PaymentPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.PenaltySurchargePercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.UnqualifiedDataTypesUnqualifiedDataTypes.PercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.PercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.ProgressPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.UnqualifiedDataTypesUnqualifiedDataTypes.RateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.RateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.ReliabilityPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.ReminderSequenceNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.ResidentOccupantsNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.SequenceNumericType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.SettlementDiscountPercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.SourceCurrencyBaseRateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.TargetCurrencyBaseRateType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.TargetServicePercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.TierRatePercentType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.UnqualifiedDataTypesUnqualifiedDataTypes.ValueType))]
    [XmlIncludeAttribute(typeof(Frank.Finance.Documents.Ubl.CommonBasicComponentsCommonBasicComponents.WeightNumericType))]
    public partial class NumericType
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [XmlTextAttribute()]
        public decimal Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en"><ccts:UniqueID xmlns:ccts="urn:un:unece:uncefact:documentation:2">UNDT000014-SC2</ccts:UniqueID></para>
        /// <para xml:lang="en"><ccts:CategoryCode xmlns:ccts="urn:un:unece:uncefact:documentation:2">SC</ccts:CategoryCode></para>
        /// <para xml:lang="en"><ccts:DictionaryEntryName xmlns:ccts="urn:un:unece:uncefact:documentation:2">Numeric. Format. Text</ccts:DictionaryEntryName></para>
        /// <para xml:lang="en"><ccts:Definition xmlns:ccts="urn:un:unece:uncefact:documentation:2">Whether the number is an integer, decimal, real number or percentage.
        ///                            </ccts:Definition></para>
        /// <para xml:lang="en"><ccts:ObjectClass xmlns:ccts="urn:un:unece:uncefact:documentation:2">Numeric</ccts:ObjectClass></para>
        /// <para xml:lang="en"><ccts:PropertyTermName xmlns:ccts="urn:un:unece:uncefact:documentation:2">Format</ccts:PropertyTermName></para>
        /// <para xml:lang="en"><ccts:RepresentationTermName xmlns:ccts="urn:un:unece:uncefact:documentation:2">Text</ccts:RepresentationTermName></para>
        /// <para xml:lang="en"><ccts:PrimitiveType xmlns:ccts="urn:un:unece:uncefact:documentation:2">string</ccts:PrimitiveType></para>
        /// </summary>
        [XmlAttributeAttribute("format")]
        public string Format { get; set; }
    }
}
